openapi: 3.0.0

info:
  version: 1.0.0
  title: Asset Masterdata API
  description: API to get asset metadata and content
  contact:
    name: E-Business Assets
    url: https://wiki.bahag.com/x/wAFrN
    email: assets-team@bahag.com
  x-api-id: fd9f8ffa-2aa6-416d-8520-657300c54196
  x-audience: company-internal

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/BAHAG/api-assets-masterdata/1.0.0
  - description: playground stage
    url: https://playground.api.bauhaus/v1
  - description: dev stage
    url: https://dev.api.bauhaus/v1
  - description: prod stage
    url: https://api.bauhaus/v1

paths:
  /{country-code}/assets/{id}:
    get:
      summary: |
        Get the metadata for an asset.
      operationId: getAssetById
      tags:
        - assets
      parameters:
        - $ref: '#/components/parameters/countryCode'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/sapNumber'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '404':
          $ref: "#/components/responses/Asset_Not_Found"
  /{country-code}/assets:
    post:
      summary: |
        Get the metadata for multiple assets.
      operationId: getAssetsByIds
      tags:
        - assets
      parameters:
        - $ref: '#/components/parameters/countryCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Multiple_Assets'
        '404':
          $ref: "#/components/responses/Asset_Not_Found"
  /{country-code}/assets/findbydates:
    get:
      summary: |
        Get all assets with less data for a specific time range (MAX 24 Hours) and country
      operationId: getAssetsByLastModified
      tags:
        - assets
      parameters:
        - $ref: '#/components/parameters/countryCode'
        - $ref: '#/components/parameters/timeStart'
        - $ref: '#/components/parameters/timeEnd'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Date_Assets'
  /{country-code}/assets/articlenumbers/{id}:
    get:
      summary: |
        Get all assets by sap number.
      operationId: getAssetsBySapNumber
      tags:
        - assets
      parameters:
        - $ref: '#/components/parameters/countryCode'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sap_Asset'

  /assets/deletes:
    post:
      summary: |
        Deletes assets via ids
      operationId: deleteAssetsByIds
      tags:
        - database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: "The asset was successfully deleted"
          content:
            application/json:
              schema:
                type: string
                example: The asset was successfully deleted
  /assets:
    post:
      summary: |
        Add / Update complete countries object for one specific asset.
      operationId: modifyAsset
      tags:
        - database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
            #  $ref: '#/components/schemas/Assets'
      responses:
        '201':
          description: "The asset was successfully created"
          content:
            application/json:
              schema:
                type: object
                example: The asset was successfully created
        '200':
          description: "The asset was successfully updated"
          content:
            application/json:
              schema:
                type: object
                example: The asset was successfully updated
  /assets/{id}:
    get:
      summary: |
        Get the hole metadata for an asset.
      operationId: getAssetMetadataById
      tags:
        - database
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'

  /assets/{asset-type}:
    delete:
      summary: |
        Deletes assets via the type
      operationId: deleteAssetsByType
      tags:
        - database
      parameters:
        - $ref: '#/components/parameters/assetType'
      responses:
        '200':
          description: "The asset was successfully deleted"
          content:
            application/json:
              schema:
                type: string
                example: The asset was successfully deleted
  /{country-code}/assets/articlenumbers/{asset-type}:
    get:
      summary: |
        Get All Assets SAP_Numbers from a specific type
      operationId: getAllSapNumbersByType
      tags:
        - database
      parameters:
        - $ref: '#/components/parameters/countryCode'
        - $ref: '#/components/parameters/assetType'
      responses:
        '200':
          description: "Simple SAP number list"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /datasheets/{id}:
    get:
      summary: |
        get datasheet
      operationId: getDataSheetsById
      tags:
        - datasheet
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Data_Sheet'
  /renew/datasheets:
    post:
      summary: |
        renew datasheets
      operationId: renewDatasheetById
      tags:
        - datasheet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: "The datasheets are successfully deleted"
          content:
            application/json:
              schema:
                type: string
                example: The datasheets are successfully refilled
  /datasheets:
    post:
      summary: |
        create / update datasheet
      operationId: updateDatasheetById
      tags:
        - datasheet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Data_Sheet'
      responses:
        '200':
          description: The datasheets are successfully updated"
          content:
            application/json:
              schema:
                type: string
                example: The datasheets are successfully updated
    delete:
      summary: |
        Deletes datasheets
      operationId: deleteDataSheetsById
      tags:
        - datasheet
      parameters:
        - $ref: '#/components/parameters/sapNumber'
        - $ref: '#/components/parameters/docID'
      responses:
        '200':
          description: "The datasheets are successfully deleted"
          content:
            application/json:
              schema:
                type: string
                example: The datasheets are successfully deleted
  /health:
    get:
      tags:
        - health
      summary: |
        Health endpoint can be called to check the availability of the Service.  
        It returns some basic information about the API.
      operationId: getHealth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '500':
          description: KO
components:
  responses:
    Asset_Not_Found:
      description: "no asset with given id exists"
      content:
        application/json:
          schema:
            type: string
            example: The asset was not found

  parameters:
    countryCode:
      in: path
      name: country-code
      description: the country code
      required: true
      example: de
      schema:
        type: string
        format: iso-3166
        enum:
          - at
          - ba
          - bg
          - dk
          - ee
          - fi
          - hu
          - is
          - lu
          - no
          - rs
          - se
          - si
          - sk
          - tr
          - de
          - es
          - hr
          - nl
          - cz
          - ch
    id:
      name: id
      in: path
      required: true
      example: "test"
      schema:
        type: string
    assetType:
      name: asset-type
      in: path
      required: true
      example: "PRODUCT_IMAGE"
      schema:
        $ref: '#/components/schemas/Asset_Type'
    sapNumber:
      name: sap_number
      in: query
      required: false
      example: "12345678"
      schema:
        type: string
        minimum: 8
    docID:
      name: doc_id
      in: query
      required: false
      example: "1234"
      schema:
        type: string
    timeStart:
      name: time_start
      in: query
      required: true
      schema:
        type: integer
        format: int64
    timeEnd:
      name: time_end
      in: query
      required: false
      schema:
        type: integer
        format: int64

  schemas:
    Health:
      # see https://app.swaggerhub.com/domains/BAHAG/Problem/1.1.0#/definitions/Health
      # using default values to specify the response of the /health endpoint
      type: object
      properties:
        team:
          type: string
          description: name of the team
          default: Asset Management
        api:
          type: string
          description: name of the api
          default: api-assets-masterdata
        version:
          type: string
          description: version of the api
          default: 1.0.0
    Asset:
      type: object
      required: [id, type, sub_type, modified_at, expires_at, motif, motif_url, languages, image_derivatives]
      properties:
        id:
          type: string
          nullable: false
        type:
          $ref: '#/components/schemas/Asset_Type'
        sub_type:
          type: string
          nullable: false
        modified_at:
          type: string
          format: date-time
          nullable: false
        expires_at:
          type: string
          format: date-time
          nullable: true
        motif:
          type: string
          nullable: true
        motif_url:
          type: string
          nullable: true
        languages:
          type: array
          items:
            type: string
        image_derivatives:
          type: array
          items:
            $ref: '#/components/schemas/Image_Derivative'
        embed_information:
          $ref: '#/components/schemas/Embed_Information'
        file_information:
          $ref: '#/components/schemas/File_Information'
        energy_classification_information:
          $ref: '#/components/schemas/Energy_Classification_Information'
    Image_Derivative:
      required: [name, width, height, media_type, url]
      type: object
      properties:
        name:
          type: string
          nullable: false
        width:
          type: integer
          format: int64
          nullable: false
          example: 696
        height:
          type: integer
          format: int64
          nullable: false
          example: 696
        media_type:
          type: string
          nullable: false
          enum:
            - IMAGE_WEBP
            - IMAGE_JPG
            - IMAGE_PNG
        url:
          type: string
          nullable: false
    Embed_Information:
      required: [ id, provider ]
      nullable: true
      type: object
      properties:
        id:
          type: string
          nullable: false
        provider:
          type: string
          nullable: false
          enum:
            - YOUTUBE
            - VIMEO
            - ORBITVU
    File_Information:
      required: [ size_bytes, download_url ]
      nullable: true
      type: object
      properties:
        size_bytes:
          type: integer
          format: int64
          nullable: false
        download_url:
          type: string
          nullable: false
    Energy_Classification_Information:
      required: [ class, range, category, eprel_number ]
      nullable: true
      properties:
        class:
          type: string
          nullable: false
          enum:
            - AAAA
            - AAA
            - AA
            - A
            - B
            - C
            - D
            - E
            - F
            - G
        range:
          type: string
          nullable: false
          enum:
            - A-E
            - A-G
            - AA-F
            - AA-G
            - AAA-D
            - AAA-E
            - AAA-F
            - AAA-G
            - AAAA-D
        category:
          type: string
          nullable: false
        eprel_number:
          type: string
          nullable: true
    Assets:
      required: [ id, countries, exported_at, created_at, last_modified_at, type ]
      nullable: false
      type: object
      properties:
        id:
          type: string
          nullable: false
        type:
          $ref: '#/components/schemas/Asset_Type'
        countries:
          type: array
          items:
            type: object
            properties:
              country:
                type: string
                nullable: false
              asset:
                $ref: '#/components/schemas/Asset'
        sap_numbers:
          type: array
          items:
            type: string
        ch_article_numbers:
          type: array
          items:
            type: string
        exported_at:
          type: integer
          format: int64
          nullable: false
        created_at:
          type: integer
          format: int64
          nullable: false
        last_modified_at:
          type: integer
          format: int64
          nullable: false
    Asset_Type:
      type: string
      nullable: false
      enum:
        - CONTENT_IMAGE
        - DOCUMENT
        - INTERACTIVE
        - LOGO
        - ENERGY_LOGO
        - BRAND_LOGO
        - PRODUCT_PICTO
        - CONTENT_PICTO
        - PRODUCT_IMAGE
        - VIDEO
        - UNKNOWN
        - WEB_IMAGE
        - WEB_DOCUMENT
        - CMS_ASSET
    Multiple_Assets:
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/Asset_Type'
        asset:
          $ref: '#/components/schemas/Asset'
    Sap_Asset:
      required: [sap_number, country, result]
      properties:
        sap_number:
          type: string
          example: "12345678"
        country:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/Multiple_Assets'
    Data_Sheet:
      required: [id, document]
      properties:
        id:
          type: string
        document:
          required: [id, url, title, produce_id, solr_id, type_purpose, type_name, type_category, name]
          type: object
          properties:
            version:
              type: integer
              format: int64
              nullable: true
            article_ean_code:
              type: string
              nullable: true
            article_name:
              type: string
              nullable: true
            id:
              type: string
              nullable: false
            name:
              type: string
              nullable: false
            type_category:
              type: string
              nullable: true
            type_name:
              type: string
              nullable: true
            type_purpose:
              type: string
              nullable: true
            url:
              type: string
              nullable: false
            solr_id:
              type: string
              nullable: false
            product_id:
              type: string
              nullable: false
            title:
              type: string
              nullable: false
    Date_Assets:
      properties:
        date_start:
          type: string
          format: date-time
        date_end:
          type: string
          format: date-time
        assets:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                $ref: '#/components/schemas/Asset_Type'